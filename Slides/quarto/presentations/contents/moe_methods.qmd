# Mixture of Experts Controller

## Mixture of Experts Controller

<br/>

:::{.fragment fragment-index=0}
* **Objective**: learn contact-aware mixture of expert controller and a gating network 
:::

:::{.fragment fragment-index=1}
* All the experts and the gating network are given by neural nets
* We pose the search over the parameters $\psi, \theta$ as the following optimization problem

:::{.callout-tip icon="false"}
## Optimization Problem
\begin{align*}
    \begin{aligned}
        \underset{\psi, \theta}{\textrm{minimize}} 
        & & & \int_0^T \ell (x(t),u) \dd t , \\%
        \textrm{subject to}
        & & & M(q) \dd \dot{q} + h(x; \psi, \theta)\dd t - \dd R  = 0,\\%
        & & & u = \{F_i(x; \theta_i) \; | \; i  \sim \text{Categorical} (\mathbf{P}(x| \psi)) \}.
    \end{aligned}
\end{align*}
:::
:::

## Training 

<br/>

::: {.incremental}
* Training procedure:
  + Start from initial parameters $(\psi, \theta)$
  + Sample initial state $x_0$
  + Generate trajectories $\phi(x_0, u, T)$ using current parameters
  \begin{gather*}
    i  \sim \text{Categorical} (\mathbf{P}(x| \psi)) \\
    u(x; \psi, \theta) = F_i(x; \theta_i) \\
    M(q) \dd \dot{q} + h(x; \psi, \theta) \dd t - \dd R  = 0 \text{ (Moreau's time stepping)}
  \end{gather*}
  + Assign a running cost $\ell$ to the trajectories based on performance
  + Update parameters $(\psi, \theta)$ to minimize running cost
:::

## Performance Objective

<br/>

\begin{align*}
    \begin{aligned}
        \underset{\psi, \theta}{\textrm{minimize}} 
        & & & \int_0^T \ell (x(t),u) \dd t , \\%
        \textrm{subject to}
        & & & M(q) \dd \dot{q} + h(x; \psi, \theta)\dd t - \dd R  = 0,\\%
        & & & u = \{F_i(x; \theta_i) \; | \; i  \sim \text{Categorical} (\mathbf{P}(x| \psi)) \}.
    \end{aligned}
\end{align*}

:::{.fragment fragment-index=0}
* Accumulated loss: total quadratic loss from desired state $x^*$
\begin{gather*}
\ell(x, u) = \frac{1}{2}(x - x^*)^\top \mathcal{Q} (x - x^*) + \frac{1}{2} u^\top \mathcal{R} u \\
\mathcal{Q} \succ 0, \mathcal{R} \succeq 0
\end{gather*}
:::

:::{.fragment fragment-index=1}
The corresponding likelihood function is
:::

:::{.r-stack}

:::{.fragment .fade-in-then-out fragment-index=1}
$$
\ln \{P(\mathbb{D} | \theta, \psi) \} = \sum_{j=1}^{N} \ln \sum_{i=1}^{N_F} \frac{1}{\sqrt{2 \pi \sigma_i^2}} \exp \left( -\frac{1}{2}\frac{(y_j - \mu_i)^2}{\sigma_i^2} \right) P_i(x_j, \psi)
$$
:::

:::{.fragment .fade-in fragment-index=2}
$$
\ln \{P(\phi | \theta, \psi) \} = \sum_{t=0}^{T} \ln \sum_{i=1}^{N_F} \frac{1}{\sqrt{2 \pi s^2}} \exp \left( -\frac{1}{2}\frac{\ell (x(t+\Delta t), F_i )^2}{s^2} \right) P_i(x(t), \psi)
$$

:::
:::

## State Sampling 

**Objective**: meet performance for various initial states
$$
J(\phi, u^\theta) = \mathbb{E}_{x_0 \in \mathcal{D}_N}[ \ell( \phi(x_0, u, T), u) ]
$$

:::: {.r-stack}

![](contents/assets/neuralpbc/033.svg){.fragment}

![](contents/assets/neuralpbc/000.svg)

![](contents/assets/neuralpbc/001.svg){.fragment}

![](contents/assets/neuralpbc/002.svg){.fragment}

![](contents/assets/neuralpbc/003.svg){.fragment}

![](contents/assets/neuralpbc/004.svg){.fragment}

![](contents/assets/neuralpbc/005.svg){.fragment}

![](contents/assets/neuralpbc/006.svg){.fragment}

![](contents/assets/neuralpbc/007.svg){.fragment}

![](contents/assets/neuralpbc/008.svg){.fragment}

![](contents/assets/neuralpbc/009.svg){.fragment}

![](contents/assets/neuralpbc/010.svg){.fragment}

![](contents/assets/neuralpbc/011.svg){.fragment}

![](contents/assets/neuralpbc/012.svg){.fragment}

![](contents/assets/neuralpbc/013.svg){.fragment}

![](contents/assets/neuralpbc/014.svg){.fragment}

![](contents/assets/neuralpbc/015.svg){.fragment}

![](contents/assets/neuralpbc/016.svg){.fragment}

![](contents/assets/neuralpbc/021.svg){.fragment}

![](contents/assets/neuralpbc/022.svg){.fragment}

![](contents/assets/neuralpbc/023.svg){.fragment}

![](contents/assets/neuralpbc/024.svg){.fragment}

![](contents/assets/neuralpbc/025.svg){.fragment}

![](contents/assets/neuralpbc/026.svg){.fragment}

![](contents/assets/neuralpbc/027.svg){.fragment}

![](contents/assets/neuralpbc/032.svg){.fragment}

![](contents/assets/neuralpbc/033.svg){.fragment}

::::